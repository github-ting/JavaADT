/**
 * @author CHUA CHUN YAN
 */

package boundary.programme;

import entity.Programme;
import control.ManageProgramme;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.border.Border;
import adt.ListInterface;
import utils.LengthAndIntegerRestrictedDocument;

public class SearchProgrammeUI extends javax.swing.JDialog {

    public SearchProgrammeUI(java.awt.Frame parent, boolean modal) {
        this(parent, modal, new SearchProgrammeConfig());
    }

    public SearchProgrammeUI(java.awt.Frame parent, boolean modal, SearchProgrammeConfig config) {
        super(parent, modal);
        initComponents();

        ListInterface<Programme> programmeList = ManageProgramme.getProgrammeList();
        programmeList.sort("programmeCode");
        initSearchPanel(programmeList);

        this.setTitle(config.getTitle());
        this.config = config;

        if (!config.isEditingProgramme() && !config.isGeneratingReport()
                && !config.isAddingTutorialGroup() && !config.isRemovingTutorialGroup() && !config.isListingTutorialGroup()) {
            jbtChooseProgramme.setVisible(false);
        }

        if (!config.isRemovingProgramme()) {
            jbtRemoveProgramme.setVisible(false);
            jbtRemoveAllProgramme.setVisible(false);
        }

        jlbNoOfResults.setHorizontalAlignment(SwingConstants.RIGHT);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfProgrammeCode = new javax.swing.JTextField();
        jtfProgrammeName = new javax.swing.JTextField();
        jtfProgrammeDuration = new javax.swing.JTextField();
        jbtRefresh = new javax.swing.JButton();
        jbtChooseProgramme = new javax.swing.JButton();
        jbtClose = new javax.swing.JButton();
        jbtClearInput = new javax.swing.JButton();
        jlbProgrammeName = new javax.swing.JLabel();
        jlbProgrammeCode = new javax.swing.JLabel();
        jlbProgrammeDesc = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaProgrammeDesc = new javax.swing.JTextArea();
        jlbProgrammeDuration = new javax.swing.JLabel();
        jlbMonths = new javax.swing.JLabel();
        searchScrollPane = new javax.swing.JScrollPane();
        searchPanel = new javax.swing.JPanel();
        jbtRemoveProgramme = new javax.swing.JButton();
        jlbNoOfResults = new javax.swing.JLabel();
        jlbResultText = new javax.swing.JLabel();
        jcbSortAttribute = new javax.swing.JComboBox<>();
        jlbSortBy = new javax.swing.JLabel();
        jbtDescSort = new javax.swing.JButton();
        jbtAscSort = new javax.swing.JButton();
        jlbFaculty = new javax.swing.JLabel();
        jcbFacultyChoice = new javax.swing.JComboBox<>();
        jlbCreditHour = new javax.swing.JLabel();
        jtfCreditHour = new javax.swing.JTextField();
        jbtRemoveAllProgramme = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jtfProgrammeCode.setNextFocusableComponent(jtfProgrammeName);
        jtfProgrammeCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfProgrammeCodeKeyReleased(evt);
            }
        });

        jtfProgrammeName.setNextFocusableComponent(jcbFacultyChoice);
        jtfProgrammeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfProgrammeNameKeyReleased(evt);
            }
        });

        jtfProgrammeDuration.setDocument(new LengthAndIntegerRestrictedDocument(2));
        jtfProgrammeDuration.setNextFocusableComponent(jtaProgrammeDesc);
        jtfProgrammeDuration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfProgrammeDurationKeyReleased(evt);
            }
        });

        jbtRefresh.setText("Refresh");
        jbtRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRefreshActionPerformed(evt);
            }
        });

        jbtChooseProgramme.setText("Choose");
        jbtChooseProgramme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtChooseProgrammeActionPerformed(evt);
            }
        });

        jbtClose.setText("Close");
        jbtClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCloseActionPerformed(evt);
            }
        });

        jbtClearInput.setText("Clear");
        jbtClearInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtClearInputActionPerformed(evt);
            }
        });

        jlbProgrammeName.setText("Name");

        jlbProgrammeCode.setText("Code");

        jlbProgrammeDesc.setText("Description");

        jtaProgrammeDesc.setColumns(20);
        jtaProgrammeDesc.setRows(5);
        jtaProgrammeDesc.setNextFocusableComponent(jtfCreditHour);
        jtaProgrammeDesc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtaProgrammeDescKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jtaProgrammeDesc);

        jlbProgrammeDuration.setText("Duration");

        jlbMonths.setText("months");

        searchScrollPane.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchScrollPane.setHorizontalScrollBar(null);
        searchScrollPane.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        searchScrollPane.setViewportView(null);

        searchPanel.setBackground(new java.awt.Color(255, 255, 255));
        searchPanel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        searchPanel.setLayout(new java.awt.GridLayout((int)(Math.ceil(((double)ManageProgramme.getProgrammeList().size())/4.0)), 4));
        searchScrollPane.setViewportView(searchPanel);

        jbtRemoveProgramme.setText("Remove");
        jbtRemoveProgramme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveProgrammeActionPerformed(evt);
            }
        });

        jlbNoOfResults.setText("0");
        jlbNoOfResults.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jlbNoOfResults.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jlbResultText.setText("result(s)");

        jcbSortAttribute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Code", "Name", "Description", "Faculty", "Duration", "Credit Hour" }));
        jcbSortAttribute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbSortAttributeActionPerformed(evt);
            }
        });

        jlbSortBy.setText("Sort by : ");

        jbtDescSort.setText("DESC");
        jbtDescSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDescSortActionPerformed(evt);
            }
        });

        jbtAscSort.setText("ASC");
        jbtAscSort.setEnabled(false);
        jbtAscSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtAscSortActionPerformed(evt);
            }
        });

        jlbFaculty.setText("Faculty");

        jcbFacultyChoice.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Faculty", "FAFB", "FOAS", "FOCS", "FOBE", "FOET", "FCCI", "FSSH" }));
        jcbFacultyChoice.setNextFocusableComponent(jtfProgrammeDuration);
        jcbFacultyChoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbFacultyChoiceActionPerformed(evt);
            }
        });

        jlbCreditHour.setText("Credit Hour");

        jtfCreditHour.setDocument(new LengthAndIntegerRestrictedDocument(3));
        jtfCreditHour.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfCreditHourKeyReleased(evt);
            }
        });

        jbtRemoveAllProgramme.setText("Remove All");
        jbtRemoveAllProgramme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtRemoveAllProgrammeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jlbFaculty, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcbFacultyChoice, 0, 116, Short.MAX_VALUE)
                        .addGap(122, 122, 122))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jlbProgrammeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jlbProgrammeName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jtfProgrammeName, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtfProgrammeCode)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(jlbProgrammeDuration)
                                .addGap(18, 18, 18)
                                .addComponent(jtfProgrammeDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jlbMonths)))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jlbProgrammeDesc)
                            .addComponent(jlbCreditHour, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 432, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE)
                        .addComponent(jbtClearInput)
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtfCreditHour, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlbNoOfResults, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jlbResultText, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jbtRefresh)
                        .addGap(31, 31, 31)
                        .addComponent(jlbSortBy, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jcbSortAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtAscSort)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtDescSort, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtRemoveAllProgramme)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtRemoveProgramme)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbtChooseProgramme)
                        .addGap(18, 18, 18)
                        .addComponent(jbtClose)
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtClearInput)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jlbProgrammeCode, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jtfProgrammeCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jlbProgrammeDesc)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlbProgrammeName)
                            .addComponent(jtfProgrammeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jcbFacultyChoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbFaculty)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfProgrammeDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlbProgrammeDuration)
                            .addComponent(jlbMonths)
                            .addComponent(jlbCreditHour)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfCreditHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlbNoOfResults, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbResultText))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtRefresh)
                    .addComponent(jbtChooseProgramme)
                    .addComponent(jbtClose)
                    .addComponent(jbtRemoveProgramme)
                    .addComponent(jcbSortAttribute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlbSortBy)
                    .addComponent(jbtDescSort)
                    .addComponent(jbtAscSort)
                    .addComponent(jbtRemoveAllProgramme))
                .addGap(16, 16, 16))
        );

        searchScrollPane.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtCloseActionPerformed

    private void jbtRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRefreshActionPerformed
        showSearchResult();
    }//GEN-LAST:event_jbtRefreshActionPerformed

    private void jtfProgrammeCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfProgrammeCodeKeyReleased
        showSearchResult();
    }//GEN-LAST:event_jtfProgrammeCodeKeyReleased

    private void jbtClearInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtClearInputActionPerformed
        clearInput();

        initSearchPanel(ManageProgramme.getProgrammeList());
    }//GEN-LAST:event_jbtClearInputActionPerformed

    private void jbtChooseProgrammeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtChooseProgrammeActionPerformed
        dispose();

        if (chosenLabel == null) {
            return;
        }

        Programme programme = getChosenProgramme();
        
        if (config.isEditingProgramme()) {
            new ProgrammeInputUI(null, true, programme).setVisible(true);
        } else if (config.isGeneratingReport()) {
            new ProgrammeReportUI(null, false, programme).setVisible(true);
        } else if (config.isAddingTutorialGroup()) {
            new TutorialGroupInputUI(null, false, programme).setVisible(true);
        } else if (config.isRemovingTutorialGroup()) {
            new SearchTutorialGroupUI(null, true, "Select a tutorial group to remove",
                    true, programme).setVisible(true);
        } else if (config.isListingTutorialGroup()) {
            new SearchTutorialGroupUI(null, true, "All Tutorial Group in " + programme.getProgrammeCode() + " " + programme.getProgrammeName(),
                    false, programme).setVisible(true);
        }
    }//GEN-LAST:event_jbtChooseProgrammeActionPerformed

    private void jbtRemoveProgrammeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveProgrammeActionPerformed
        Programme chosenProgramme = getChosenProgramme();

        if (chosenProgramme == null) {
            JOptionPane.showMessageDialog(this, "Please select a programme!");
            return;
        }

        int choice = JOptionPane.showConfirmDialog(this, "Confirm?", "Removing Programme", JOptionPane.YES_NO_OPTION);

        if (choice != JOptionPane.YES_OPTION) {
            return;
        }

        if (!ManageProgramme.removeProgramme(chosenProgramme)) {
            JOptionPane.showMessageDialog(this, "Invalid Programme!");
        } else {
            showSearchResult();
            JOptionPane.showMessageDialog(this, "Removed success!");
        }
    }//GEN-LAST:event_jbtRemoveProgrammeActionPerformed

    private void jtfProgrammeNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfProgrammeNameKeyReleased
        showSearchResult();
    }//GEN-LAST:event_jtfProgrammeNameKeyReleased

    private void jtfProgrammeDurationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfProgrammeDurationKeyReleased
        showSearchResult();
    }//GEN-LAST:event_jtfProgrammeDurationKeyReleased

    private void jtaProgrammeDescKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtaProgrammeDescKeyReleased
        showSearchResult();
    }//GEN-LAST:event_jtaProgrammeDescKeyReleased

    private void jbtDescSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDescSortActionPerformed
        ManageProgramme.getProgrammeList().reverse();
        filteredProgramme.reverse();

        jbtAscSort.setEnabled(true);
        jbtDescSort.setEnabled(false);

        initSearchPanel(filteredProgramme);
    }//GEN-LAST:event_jbtDescSortActionPerformed

    private void jcbSortAttributeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbSortAttributeActionPerformed
        String attributeName = (String) jcbSortAttribute.getSelectedItem();
        ListInterface<Programme> programmeList = ManageProgramme.getProgrammeList();
        
        switch (attributeName) {
            case "Code" ->
                programmeList.sort("programmeCode");
            case "Name" ->
                programmeList.sort("programmeName", "programmeCode");
            case "Description" ->
                programmeList.sort("programmeDesc", "programmeCode");
            case "Faculty" ->
                programmeList.sort("faculty", "programmeCode");
            case "Duration" ->
                programmeList.sort("programmeDurationInMonths", "programmeCode");
            case "Credit Hour" ->
                programmeList.sort("creditHour", "programmeCode");
        }

        if (!jbtDescSort.isEnabled()) {
            programmeList.reverse();
        }

        showSearchResult();
    }//GEN-LAST:event_jcbSortAttributeActionPerformed

    private void jbtAscSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtAscSortActionPerformed
        ManageProgramme.getProgrammeList().reverse();
        filteredProgramme.reverse();

        jbtAscSort.setEnabled(false);
        jbtDescSort.setEnabled(true);

        initSearchPanel(filteredProgramme);
    }//GEN-LAST:event_jbtAscSortActionPerformed

    private void jtfCreditHourKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCreditHourKeyReleased
        showSearchResult();
    }//GEN-LAST:event_jtfCreditHourKeyReleased

    private void jcbFacultyChoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbFacultyChoiceActionPerformed
        showSearchResult();
    }//GEN-LAST:event_jcbFacultyChoiceActionPerformed

    private void jbtRemoveAllProgrammeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtRemoveAllProgrammeActionPerformed
        int choice = JOptionPane.showConfirmDialog(this, "Confirm?", "Removing All Programme", JOptionPane.YES_NO_OPTION);

        if (choice != JOptionPane.YES_OPTION) {
            return;
        }

        ManageProgramme.removeAllProgramme();

        initSearchPanel(ManageProgramme.getProgrammeList());
        JOptionPane.showMessageDialog(this, "Removed success!");
    }//GEN-LAST:event_jbtRemoveAllProgrammeActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed

    private void showSearchResult() {
        int programmeDuration = jtfProgrammeDuration.getText().length() == 0 ? -1 : Integer.parseInt(jtfProgrammeDuration.getText());
        int creditHour = jtfCreditHour.getText().length() == 0 ? -1 : Integer.parseInt(jtfCreditHour.getText());

        ListInterface<Programme> filteredProgramme = ManageProgramme.findProgramme(jtfProgrammeCode.getText(),
                jtfProgrammeName.getText(), jtaProgrammeDesc.getText(), (String) jcbFacultyChoice.getSelectedItem(), programmeDuration, creditHour);

        initSearchPanel(filteredProgramme);
    }

    private void initSearchPanel(ListInterface<Programme> programmeList) {
        searchPanel.removeAll();
        searchPanel.setLayout(new GridLayout((int) (Math.ceil(((double) programmeList.size()) / 4.0)), 4));
        filteredProgramme = programmeList;

        programmeLabels = new JLabel[programmeList.size()];
        JLabel label;

        final String html = "<html><body style='width: 150px; padding-left: 5px'>%1s";

        for (int i = 0; i < programmeList.size(); i++) {
            label = new JLabel(String.format(html, programmeList.get(i).toString().replaceAll("\n", "<br>")));
            label.addMouseListener(programmeLabelMouseListener);
            label.setBorder(unchosenBorder);

            programmeLabels[i] = label;
            searchPanel.add(label);
        }

        searchPanel.revalidate();
        searchPanel.repaint();

        jlbNoOfResults.setText(programmeList.size() + "");
    }

    public Programme getChosenProgramme() {
        if (chosenLabel == null) {
            return null;
        }

        for (int i = 0; i < programmeLabels.length; i++) {
            if (chosenLabel == programmeLabels[i]) {
                return filteredProgramme.get(i);
            }
        }

        return null;
    }

    private void clearInput() {
        jtfProgrammeCode.setText("");
        jtfProgrammeName.setText("");
        jtaProgrammeDesc.setText("");
        jcbFacultyChoice.setSelectedIndex(0);
        jtfProgrammeDuration.setText("");
        jtfCreditHour.setText("");
    }

    private class LabelMouseListener implements MouseListener {

        @Override
        public void mouseClicked(MouseEvent e) {
        }

        @Override
        public void mousePressed(MouseEvent e) {
            if (chosenLabel != null) {
                chosenLabel.setBorder(unchosenBorder);
            }

            chosenLabel = ((JLabel) e.getSource());
            chosenLabel.setBorder(chosenBorder);
        }

        @Override
        public void mouseReleased(MouseEvent e) {
        }

        @Override
        public void mouseEntered(MouseEvent e) {
        }

        @Override
        public void mouseExited(MouseEvent e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtAscSort;
    private javax.swing.JButton jbtChooseProgramme;
    private javax.swing.JButton jbtClearInput;
    private javax.swing.JButton jbtClose;
    private javax.swing.JButton jbtDescSort;
    private javax.swing.JButton jbtRefresh;
    private javax.swing.JButton jbtRemoveAllProgramme;
    private javax.swing.JButton jbtRemoveProgramme;
    private javax.swing.JComboBox<String> jcbFacultyChoice;
    private javax.swing.JComboBox<String> jcbSortAttribute;
    private javax.swing.JLabel jlbCreditHour;
    private javax.swing.JLabel jlbFaculty;
    private javax.swing.JLabel jlbMonths;
    private javax.swing.JLabel jlbNoOfResults;
    private javax.swing.JLabel jlbProgrammeCode;
    private javax.swing.JLabel jlbProgrammeDesc;
    private javax.swing.JLabel jlbProgrammeDuration;
    private javax.swing.JLabel jlbProgrammeName;
    private javax.swing.JLabel jlbResultText;
    private javax.swing.JLabel jlbSortBy;
    private javax.swing.JTextArea jtaProgrammeDesc;
    private javax.swing.JTextField jtfCreditHour;
    private javax.swing.JTextField jtfProgrammeCode;
    private javax.swing.JTextField jtfProgrammeDuration;
    private javax.swing.JTextField jtfProgrammeName;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JScrollPane searchScrollPane;
    // End of variables declaration//GEN-END:variables

    // 
    private javax.swing.JLabel[] programmeLabels;
    private javax.swing.JLabel chosenLabel;
    private MouseListener programmeLabelMouseListener = new LabelMouseListener();
    private Border unchosenBorder = BorderFactory.createLineBorder(Color.BLACK, 1);
    private Border chosenBorder = BorderFactory.createLineBorder(Color.RED, 2);

    private ListInterface<Programme> filteredProgramme;
    private SearchProgrammeConfig config;
}

class SearchProgrammeConfig {

    private String title;
    private boolean isEditingProgramme;
    private boolean isRemovingProgramme;
    private boolean isGeneratingReport;
    private boolean isAddingTutorialGroup;
    private boolean isRemovingTutorialGroup;
    private boolean isListingTutorialGroup;

    public SearchProgrammeConfig() {

    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public boolean isEditingProgramme() {
        return isEditingProgramme;
    }

    public void setIsEditingProgramme(boolean isEditingProgramme) {
        this.isEditingProgramme = isEditingProgramme;
    }

    public boolean isRemovingProgramme() {
        return isRemovingProgramme;
    }

    public void setIsRemovingProgramme(boolean isRemovingProgramme) {
        this.isRemovingProgramme = isRemovingProgramme;
    }

    public boolean isGeneratingReport() {
        return isGeneratingReport;
    }

    public void setIsGeneratingReport(boolean isGeneratingReport) {
        this.isGeneratingReport = isGeneratingReport;
    }

    public boolean isAddingTutorialGroup() {
        return isAddingTutorialGroup;
    }

    public void setIsAddingTutorialGroup(boolean isAddingTutorialGroup) {
        this.isAddingTutorialGroup = isAddingTutorialGroup;
    }

    public boolean isRemovingTutorialGroup() {
        return isRemovingTutorialGroup;
    }

    public void setIsRemovingTutorialGroup(boolean isRemovingTutorialGroup) {
        this.isRemovingTutorialGroup = isRemovingTutorialGroup;
    }

    public boolean isListingTutorialGroup() {
        return isListingTutorialGroup;
    }

    public void setIsListingTutorialGroup(boolean isListingTutorialGroup) {
        this.isListingTutorialGroup = isListingTutorialGroup;
    }
}
